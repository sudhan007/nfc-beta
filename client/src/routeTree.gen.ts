/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/auth'
import { Route as DashboardDashboardImport } from './routes/dashboard/_dashboard'
import { Route as DashboardDashboardListImport } from './routes/dashboard/_dashboard/list'

// Create Virtual Routes

const DashboardImport = createFileRoute('/dashboard')()
const PressupLazyImport = createFileRoute('/pressup')()
const BnicomorinLazyImport = createFileRoute('/bnicomorin')()
const IndexLazyImport = createFileRoute('/')()
const DashboardIndexLazyImport = createFileRoute('/dashboard/')()
const MemberIdLazyImport = createFileRoute('/member/$id')()
const DashboardDashboardIndexLazyImport = createFileRoute(
  '/dashboard/_dashboard/',
)()
const DashboardDashboardMembersLazyImport = createFileRoute(
  '/dashboard/_dashboard/members',
)()

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const PressupLazyRoute = PressupLazyImport.update({
  path: '/pressup',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/pressup.lazy').then((d) => d.Route))

const BnicomorinLazyRoute = BnicomorinLazyImport.update({
  path: '/bnicomorin',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/bnicomorin.lazy').then((d) => d.Route))

const AuthRoute = AuthImport.update({
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const DashboardIndexLazyRoute = DashboardIndexLazyImport.update({
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any).lazy(() =>
  import('./routes/dashboard/index.lazy').then((d) => d.Route),
)

const MemberIdLazyRoute = MemberIdLazyImport.update({
  path: '/member/$id',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/member/$id.lazy').then((d) => d.Route))

const DashboardDashboardRoute = DashboardDashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardDashboardIndexLazyRoute =
  DashboardDashboardIndexLazyImport.update({
    path: '/',
    getParentRoute: () => DashboardDashboardRoute,
  } as any).lazy(() =>
    import('./routes/dashboard/_dashboard/index.lazy').then((d) => d.Route),
  )

const DashboardDashboardMembersLazyRoute =
  DashboardDashboardMembersLazyImport.update({
    path: '/members',
    getParentRoute: () => DashboardDashboardRoute,
  } as any).lazy(() =>
    import('./routes/dashboard/_dashboard/members.lazy').then((d) => d.Route),
  )

const DashboardDashboardListRoute = DashboardDashboardListImport.update({
  path: '/list',
  getParentRoute: () => DashboardDashboardRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/bnicomorin': {
      id: '/bnicomorin'
      path: '/bnicomorin'
      fullPath: '/bnicomorin'
      preLoaderRoute: typeof BnicomorinLazyImport
      parentRoute: typeof rootRoute
    }
    '/pressup': {
      id: '/pressup'
      path: '/pressup'
      fullPath: '/pressup'
      preLoaderRoute: typeof PressupLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/_dashboard': {
      id: '/dashboard/_dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardDashboardImport
      parentRoute: typeof DashboardRoute
    }
    '/member/$id': {
      id: '/member/$id'
      path: '/member/$id'
      fullPath: '/member/$id'
      preLoaderRoute: typeof MemberIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexLazyImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/_dashboard/list': {
      id: '/dashboard/_dashboard/list'
      path: '/list'
      fullPath: '/dashboard/list'
      preLoaderRoute: typeof DashboardDashboardListImport
      parentRoute: typeof DashboardDashboardImport
    }
    '/dashboard/_dashboard/members': {
      id: '/dashboard/_dashboard/members'
      path: '/members'
      fullPath: '/dashboard/members'
      preLoaderRoute: typeof DashboardDashboardMembersLazyImport
      parentRoute: typeof DashboardDashboardImport
    }
    '/dashboard/_dashboard/': {
      id: '/dashboard/_dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardDashboardIndexLazyImport
      parentRoute: typeof DashboardDashboardImport
    }
  }
}

// Create and export the route tree

interface DashboardDashboardRouteChildren {
  DashboardDashboardListRoute: typeof DashboardDashboardListRoute
  DashboardDashboardMembersLazyRoute: typeof DashboardDashboardMembersLazyRoute
  DashboardDashboardIndexLazyRoute: typeof DashboardDashboardIndexLazyRoute
}

const DashboardDashboardRouteChildren: DashboardDashboardRouteChildren = {
  DashboardDashboardListRoute: DashboardDashboardListRoute,
  DashboardDashboardMembersLazyRoute: DashboardDashboardMembersLazyRoute,
  DashboardDashboardIndexLazyRoute: DashboardDashboardIndexLazyRoute,
}

const DashboardDashboardRouteWithChildren =
  DashboardDashboardRoute._addFileChildren(DashboardDashboardRouteChildren)

interface DashboardRouteChildren {
  DashboardDashboardRoute: typeof DashboardDashboardRouteWithChildren
  DashboardIndexLazyRoute: typeof DashboardIndexLazyRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardDashboardRoute: DashboardDashboardRouteWithChildren,
  DashboardIndexLazyRoute: DashboardIndexLazyRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/auth': typeof AuthRoute
  '/bnicomorin': typeof BnicomorinLazyRoute
  '/pressup': typeof PressupLazyRoute
  '/dashboard': typeof DashboardDashboardRouteWithChildren
  '/member/$id': typeof MemberIdLazyRoute
  '/dashboard/': typeof DashboardDashboardIndexLazyRoute
  '/dashboard/list': typeof DashboardDashboardListRoute
  '/dashboard/members': typeof DashboardDashboardMembersLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/auth': typeof AuthRoute
  '/bnicomorin': typeof BnicomorinLazyRoute
  '/pressup': typeof PressupLazyRoute
  '/member/$id': typeof MemberIdLazyRoute
  '/dashboard': typeof DashboardDashboardIndexLazyRoute
  '/dashboard/list': typeof DashboardDashboardListRoute
  '/dashboard/members': typeof DashboardDashboardMembersLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/auth': typeof AuthRoute
  '/bnicomorin': typeof BnicomorinLazyRoute
  '/pressup': typeof PressupLazyRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/dashboard/_dashboard': typeof DashboardDashboardRouteWithChildren
  '/member/$id': typeof MemberIdLazyRoute
  '/dashboard/': typeof DashboardIndexLazyRoute
  '/dashboard/_dashboard/list': typeof DashboardDashboardListRoute
  '/dashboard/_dashboard/members': typeof DashboardDashboardMembersLazyRoute
  '/dashboard/_dashboard/': typeof DashboardDashboardIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/bnicomorin'
    | '/pressup'
    | '/dashboard'
    | '/member/$id'
    | '/dashboard/'
    | '/dashboard/list'
    | '/dashboard/members'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/bnicomorin'
    | '/pressup'
    | '/member/$id'
    | '/dashboard'
    | '/dashboard/list'
    | '/dashboard/members'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/bnicomorin'
    | '/pressup'
    | '/dashboard'
    | '/dashboard/_dashboard'
    | '/member/$id'
    | '/dashboard/'
    | '/dashboard/_dashboard/list'
    | '/dashboard/_dashboard/members'
    | '/dashboard/_dashboard/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AuthRoute: typeof AuthRoute
  BnicomorinLazyRoute: typeof BnicomorinLazyRoute
  PressupLazyRoute: typeof PressupLazyRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  MemberIdLazyRoute: typeof MemberIdLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AuthRoute: AuthRoute,
  BnicomorinLazyRoute: BnicomorinLazyRoute,
  PressupLazyRoute: PressupLazyRoute,
  DashboardRoute: DashboardRouteWithChildren,
  MemberIdLazyRoute: MemberIdLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth",
        "/bnicomorin",
        "/pressup",
        "/dashboard",
        "/member/$id"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/auth": {
      "filePath": "auth.tsx"
    },
    "/bnicomorin": {
      "filePath": "bnicomorin.lazy.tsx"
    },
    "/pressup": {
      "filePath": "pressup.lazy.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard",
      "children": [
        "/dashboard/_dashboard",
        "/dashboard/"
      ]
    },
    "/dashboard/_dashboard": {
      "filePath": "dashboard/_dashboard.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/_dashboard/list",
        "/dashboard/_dashboard/members",
        "/dashboard/_dashboard/"
      ]
    },
    "/member/$id": {
      "filePath": "member/$id.lazy.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.lazy.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/_dashboard/list": {
      "filePath": "dashboard/_dashboard/list.tsx",
      "parent": "/dashboard/_dashboard"
    },
    "/dashboard/_dashboard/members": {
      "filePath": "dashboard/_dashboard/members.lazy.tsx",
      "parent": "/dashboard/_dashboard"
    },
    "/dashboard/_dashboard/": {
      "filePath": "dashboard/_dashboard/index.lazy.tsx",
      "parent": "/dashboard/_dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
